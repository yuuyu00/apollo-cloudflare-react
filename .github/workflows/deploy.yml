name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Generate Backend GraphQL Schema
        env:
          DATABASE_URL: "file:./dev.db"
        run: pnpm --filter @apollo-cloudflare-react/backend generate
      
      - name: Deploy Backend to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            pnpm --filter @apollo-cloudflare-react/backend deploy:prod
          else
            pnpm --filter @apollo-cloudflare-react/backend deploy:dev
          fi

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - uses: actions/checkout@v3
      
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Generate Frontend Code
        run: pnpm --filter @apollo-cloudflare-react/frontend generate
      
      - name: Deploy Frontend to Cloudflare Workers Static Assets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            pnpm --filter @apollo-cloudflare-react/frontend deploy:prod
          else
            pnpm --filter @apollo-cloudflare-react/frontend deploy:dev
          fi